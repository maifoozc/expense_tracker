{"ast":null,"code":"var _jsxFileName = \"D:\\\\Crio\\\\expense_tracker\\\\src\\\\components\\\\Piechart.js\";\nimport { PieChart, Pie, Legend, Tooltip, Cell } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Piechart = ({\n  userData\n}) => {\n  console.log(userData);\n  const compileExpenses = data => {\n    const categories = {};\n    data.forEach(expense => {\n      const category = expense.category;\n      if (categories[category]) {\n        categories[category] += expense.amount;\n      } else {\n        categories[category] = expense.amount;\n      }\n    });\n    return Object.keys(categories).map(category => ({\n      category,\n      amount: categories[category]\n    }));\n  };\n  const compiledData = compileExpenses(userData);\n  const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\n  const RADIAN = Math.PI / 180;\n  const renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent\n  }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n    return /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x,\n      y: y,\n      fill: \"white\",\n      textAnchor: x > cx ? \"start\" : \"end\",\n      dominantBaseline: \"central\",\n      children: `${(percent * 100).toFixed(0)}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 300,\n      height: 250,\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        dataKey: \"amount\",\n        data: compiledData,\n        cx: \"50%\",\n        cy: \"50%\",\n        outerRadius: 80,\n        labelLine: false,\n        label: renderCustomizedLabel,\n        children: compiledData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        dataKey: \"amount\",\n        layout: \"horizontal\",\n        align: \"center\",\n        verticalAlign: \"bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = Piechart;\nexport default Piechart;\nvar _c;\n$RefreshReg$(_c, \"Piechart\");","map":{"version":3,"names":["PieChart","Pie","Legend","Tooltip","Cell","jsxDEV","_jsxDEV","Piechart","userData","console","log","compileExpenses","data","categories","forEach","expense","category","amount","Object","keys","map","compiledData","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","width","height","dataKey","labelLine","label","entry","index","length","layout","align","verticalAlign","_c","$RefreshReg$"],"sources":["D:/Crio/expense_tracker/src/components/Piechart.js"],"sourcesContent":["import { PieChart,Pie, Legend, Tooltip, Cell,} from \"recharts\";\r\n\r\nconst Piechart = ({userData}) => {\r\n  console.log(userData)\r\n  const compileExpenses = (data) => {\r\n    const categories = {};\r\n    data.forEach((expense) => {\r\n      const category = expense.category;\r\n      if (categories[category]) {\r\n        categories[category] += expense.amount;\r\n      } else {\r\n        categories[category] = expense.amount;\r\n      }\r\n    });\r\n    return Object.keys(categories).map((category) => ({\r\n      category,\r\n      amount: categories[category],\r\n    }));\r\n  };\r\n\r\n  const compiledData = compileExpenses(userData);\r\n\r\n  const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\r\n\r\n  const RADIAN = Math.PI / 180;\r\n  const renderCustomizedLabel = ({cx, cy, midAngle, innerRadius, outerRadius,percent,}) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n      <text\r\n        x={x}\r\n        y={y}\r\n        fill=\"white\"\r\n        textAnchor={x > cx ? \"start\" : \"end\"}\r\n        dominantBaseline=\"central\"\r\n      >\r\n        {`${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PieChart width={300} height={250}>\r\n        <Pie dataKey=\"amount\" data={compiledData} cx=\"50%\" cy=\"50%\" outerRadius={80} labelLine={false} label={renderCustomizedLabel}>\r\n          {compiledData.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n          ))}\r\n        </Pie>\r\n        <Tooltip />\r\n        <Legend dataKey=\"amount\" layout=\"horizontal\" align=\"center\" verticalAlign=\"bottom\" />\r\n      </PieChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Piechart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}