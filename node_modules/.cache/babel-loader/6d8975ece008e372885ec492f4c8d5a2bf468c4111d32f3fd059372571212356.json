{"ast":null,"code":"var _jsxFileName = \"D:\\\\Crio\\\\expense_tracker\\\\src\\\\components\\\\Barchart.js\";\nimport React from 'react';\nimport { Bar, BarChart, Cell, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Barchart = ({\n  userData,\n  activeIndex\n}) => {\n  const categoryExpenses = {};\n  userData.expenses.forEach(expense => {\n    const {\n      category,\n      amount\n    } = expense;\n    if (categoryExpenses[category]) {\n      categoryExpenses[category] += amount;\n    } else {\n      categoryExpenses[category] = amount;\n    }\n  });\n  console.log(categoryExpenses);\n  const aggregatedData = Object.keys(categoryExpenses).map(category => ({\n    category,\n    amount: categoryExpenses[category]\n  }));\n  console.log(aggregatedData);\n  const sortedData = aggregatedData.sort((a, b) => b.amount - a.amount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 400,\n        height: 250,\n        data: sortedData,\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          type: \"number\",\n          hide: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          dataKey: \"category\",\n          type: \"category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"amount\",\n          fill: \"#8884d8\",\n          children: sortedData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {}, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c = Barchart;\nexport default Barchart;\nvar _c;\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["React","Bar","BarChart","Cell","Legend","ResponsiveContainer","Tooltip","XAxis","YAxis","jsxDEV","_jsxDEV","Barchart","userData","activeIndex","categoryExpenses","expenses","forEach","expense","category","amount","console","log","aggregatedData","Object","keys","map","sortedData","sort","a","b","children","width","height","data","layout","type","hide","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","fill","entry","index","_c","$RefreshReg$"],"sources":["D:/Crio/expense_tracker/src/components/Barchart.js"],"sourcesContent":["import React from 'react';\r\nimport { Bar, BarChart, Cell, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\n\r\nconst Barchart = ({userData, activeIndex }) => {\r\n\r\n    const categoryExpenses = {};\r\n    userData.expenses.forEach(expense => {\r\n        const { category, amount } = expense;\r\n        if (categoryExpenses[category]) {\r\n            categoryExpenses[category] += amount;\r\n        } else {\r\n            categoryExpenses[category] = amount;\r\n        }\r\n    });\r\n    console.log(categoryExpenses)\r\n\r\n    const aggregatedData = Object.keys(categoryExpenses).map(category => ({\r\n        category,\r\n        amount: categoryExpenses[category]\r\n    }));\r\n    console.log(aggregatedData)\r\n    const sortedData = aggregatedData.sort((a, b) => b.amount - a.amount);\r\n\r\n    return (\r\n        <div>\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <BarChart width={400} height={250} data={sortedData} layout=\"vertical\">\r\n            <XAxis type=\"number\" hide={true}/>\r\n            <YAxis dataKey=\"category\" type=\"category\" />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"amount\" fill=\"#8884d8\">\r\n                {sortedData.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} />\r\n                ))}\r\n            </Bar>\r\n        </BarChart>\r\n        </ResponsiveContainer>\r\n    </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Barchart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}